{"mappings":"AAAA,IAAIA,WAAaC,SAASC,YAAY,GAGlCC,SAAWF,SAASG,iBAAgB,gBAGpCC,eAAc,OACbC,QAAQH,SACTE,eAAeE,KAAKD,KAAKE,kBAIpBC,EAAE,EAAEA,EAAEN,SAASO,OAAOD,IACvBN,SAASM,GAAGE,GAAE,KAAQF,IACtBT,WAAWY,WAAU,kBAAmBH,gBAAiB,GAG7D,IAAII,cAAa,OACZJ,EAAE,EAAEA,EAAEN,SAASO,OAAOD,QAClBK,QAAQd,WAAWe,SAChBD,KAAKE,cAAY,kBAAsBP,KAAKI,cAAcN,KAAKO,MAK/E,IAAIG,QAAUhB,SAASG,iBAAgB,aAMvC,MAAMc,OAAM,CAAIC,EAAaR,KACzBQ,EAAYC,MAAMC,QAAU,EAC5BF,EAAYC,MAAME,OAAM,GAAMjB,eAAeM,GAAM,OACnDQ,EAAYC,MAAMG,UAAS,YAC3BJ,EAAYC,MAAMI,WAAU,QAE1BC,OAAUN,IACZA,EAAYC,MAAMC,QAAU,EAC5BF,EAAYC,MAAME,OAAM,MACxBH,EAAYC,MAAMG,UAAS,YAC3BJ,EAAYC,MAAMI,WAAU,OAGhCE,OAAOC,iBAAgB,SAAWC,IAC9B,IAAIC,EAASD,EAAEE,eACf,GAAuB,MAAlBD,EAAO,GAAGE,UAAyC,WAArBF,EAAO,GAAGG,UAAU,IAAuC,OAAlBH,EAAO,GAAGE,UAA0C,WAArBF,EAAO,GAAGG,UAAU,GAAkB,CAC7I,IAAIrB,EAAKkB,EAAO,GAAGI,SAAS,GAAGtB,GAC3BuB,EAAWvB,EAAGwB,MAAM,EAAGxB,EAAGD,QAC1B0B,EAAavB,cAAcqB,GAC/B,GAA+B,GAA5BE,EAAWhB,MAAMC,YAChBQ,EAAO,GAAGI,SAAS,GAAGD,UAAUK,IAAG,WACnCnB,OAAOkB,EAAYF,GACnBjB,QAAQiB,GAAUF,UAAUK,IAAG,kBAC1B5B,EAAE,EAAEA,EAAEI,cAAcH,OAAOD,IACxBA,GAAKyB,IACLT,OAAOZ,cAAcJ,IACrBQ,QAAQR,GAAGuB,UAAUM,OAAM,wBAInCT,EAAO,GAAGI,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGD,UAAUM,OAAM,kBAC9DT,EAAO,GAAGI,SAAS,GAAGD,UAAUM,OAAM,WACtCb,OAAOW,OAOnB,IAAIG,MAAQtC,SAASuC,cAAa,gBAClCD,MAAMZ,iBAAgB,SAAQ,KAC1B,GAAIY,MAAME,MAAM/B,QAAU,EAAG,CACzB,IAAIgC,EAAS,OACRpC,QAAQH,UACmC,GAAxCG,KAAKqC,YAAYC,OAAOL,MAAME,QAC9BnC,KAAKuC,cAAcb,UAAUM,OAAM,YACnChC,KAAKuC,cAAcb,UAAUM,OAAM,WAEnCI,EAAUnC,KAAKD,UAGlB,IAAIG,EAAE,EAAEA,EAAEiC,EAAUhC,OAAOD,IAC5BiC,EAAUjC,GAAGoC,cAAcb,UAAUK,IAAG,YACxCS,YAAU,KACNJ,EAAUjC,GAAGoC,cAAcb,UAAUK,IAAG,YACzC,UAEV,IACQ/B,QAAQH,SACTG,KAAKuC,cAAcb,UAAUM,OAAM,YACnChC,KAAKuC,cAAcb,UAAUM,OAAM","sources":["src/js/main.js"],"sourcesContent":["let stylesheet = document.styleSheets[0];\n\n// * Finding the articles\nlet articles = document.querySelectorAll('.articleText');\n\n// * Recording their height in the articlesHeight array\nlet articlesHeight = [];\nfor (item of articles) {\n    articlesHeight.push(item.offsetHeight);\n}\n\n// * Giving them css rules\n    for (i=0;i<articles.length;i++) {\n        articles[i].id = `id${i}`;\n        stylesheet.insertRule(`.articleText#id${i}{height:0px}`, 0);\n    }\n// * Recording them rules in the articlesRules array\n    let articlesRules = [];\n    for (i=0;i<articles.length;i++) {\n        for (rule of stylesheet.cssRules) {\n            if (rule.selectorText == `.articleText#id${i}`) articlesRules.push(rule);\n        }\n    }\n    \n// * Recording the SVG's in the svgList array\nlet svgList = document.querySelectorAll('.vertical');\n\n/**\n* @param {CSSrule}  elementRule     CSS rule that needs to be modified.\n* @param {string}   id              ID of the element that needs to be modified.\n*/\nconst showIt = (elementRule, id) => {\n    elementRule.style.opacity = 1;\n    elementRule.style.height = `${articlesHeight[id] + 40}px`;\n    elementRule.style.transform = `scaleY(1)`;\n    elementRule.style.paddingTop = `20px`;\n}\nconst hideIt = (elementRule) => {\n    elementRule.style.opacity = 0;\n    elementRule.style.height = `0px`;\n    elementRule.style.transform = `scaleY(0)`;\n    elementRule.style.paddingTop = `0px`;\n}\n\nwindow.addEventListener('click', (e) => {\n    let target = e.composedPath();\n    if ((target[0].nodeName == \"H2\" && target[1].classList[0] == \"heading\") || (target[0].nodeName == \"svg\" && target[1].classList[0] == \"heading\")) {\n        let id = target[2].children[1].id;\n        let idNumber = id.slice(2, id.length);\n        let targetRule = articlesRules[idNumber];\n        if(targetRule.style.opacity == 0) {\n            target[2].children[1].classList.add('showing');\n            showIt(targetRule, idNumber);\n            svgList[idNumber].classList.add('shrinkVertical');\n            for (i=0;i<articlesRules.length;i++) {\n                if (i != idNumber) {\n                    hideIt(articlesRules[i]);\n                    svgList[i].classList.remove('shrinkVertical');\n                }\n            }\n        } else {\n            target[1].children[1].children[0].children[0].classList.remove('shrinkVertical');\n            target[2].children[1].classList.remove('showing');\n            hideIt(targetRule);\n        }\n    }\n});\n\n\n// * Input stuff\nlet input = document.querySelector('.searchInput');\ninput.addEventListener('input', () => {\n    if (input.value.length >= 3) {\n        let unmatched = [];\n        for (item of articles) {\n            if (item.textContent.search(input.value) != -1) {\n                item.parentElement.classList.remove('disapear');\n                item.parentElement.classList.remove('beGone');\n            } else {\n                unmatched.push(item);\n            }\n        }\n        for (let i=0;i<unmatched.length;i++) {\n            unmatched[i].parentElement.classList.add('disapear');\n            setTimeout(() => {\n                unmatched[i].parentElement.classList.add('beGone');\n            }, 500);\n        }\n    } else {\n        for (item of articles) {\n            item.parentElement.classList.remove('disapear');\n            item.parentElement.classList.remove('beGone');\n        }\n    }\n});\n\n\n"],"names":["stylesheet","document","styleSheets","articles","querySelectorAll","articlesHeight","item","push","offsetHeight","i","length","id","insertRule","articlesRules","rule","cssRules","selectorText","svgList","showIt","elementRule","style","opacity","height","transform","paddingTop","hideIt","window","addEventListener","e","target","composedPath","nodeName","classList","children","idNumber","slice","targetRule","add","remove","input","querySelector","value","unmatched","textContent","search","parentElement","setTimeout"],"version":3,"file":"index.f8940aff.js.map"}